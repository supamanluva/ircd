version: '3.8'

services:
  ircd:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ircd-server
    ports:
      - "6667:6667"  # IRC plaintext
      - "7000:7000"  # IRC TLS
    volumes:
      - ./config:/app/config:ro
      - ./certs:/app/certs:ro
      - ./logs:/app/logs
    environment:
      - CONFIG_PATH=/app/config/config.yaml
    restart: unless-stopped
    networks:
      - irc-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "6667"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: ircd-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - irc-network
    profiles:
      - monitoring
    restart: unless-stopped

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: ircd-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - irc-network
    profiles:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  irc-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
